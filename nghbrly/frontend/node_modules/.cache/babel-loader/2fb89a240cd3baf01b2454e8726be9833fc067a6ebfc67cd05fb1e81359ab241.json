{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nlet cache = new Map();\nfunction get(property, value) {\n  let selectorHead = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return cache.get(selectorHead + property + value);\n}\nexports.get = get;\nfunction set(property, value, className) {\n  let selectorHead = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  if (process.env.NODE_ENV !== 'production') {\n    const valueType = typeof value;\n    if (valueType !== 'boolean' && valueType !== 'number' && valueType !== 'string') {\n      const encodedValue = JSON.stringify(value);\n      throw new TypeError(`üì¶ ui-box: invalid cache value ‚Äú${encodedValue}‚Äù. Only booleans, numbers and strings are supported.`);\n    }\n  }\n  cache.set(selectorHead + property + value, className);\n}\nexports.set = set;\nfunction entries() {\n  return [...cache];\n}\nexports.entries = entries;\nfunction hydrate(newEntries) {\n  cache = new Map([...cache, ...newEntries]);\n}\nexports.hydrate = hydrate;\nfunction clear() {\n  cache.clear();\n}\nexports.clear = clear;","map":{"version":3,"names":["Object","defineProperty","exports","value","cache","Map","get","property","selectorHead","arguments","length","undefined","set","className","process","env","NODE_ENV","valueType","encodedValue","JSON","stringify","TypeError","entries","hydrate","newEntries","clear"],"sources":["/Users/cchae/python/INET-Monday-Spring2023-Team-3/nghbrly/frontend/node_modules/ui-box/dist/src/cache.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet cache = new Map();\nfunction get(property, value, selectorHead = '') {\n    return cache.get(selectorHead + property + value);\n}\nexports.get = get;\nfunction set(property, value, className, selectorHead = '') {\n    if (process.env.NODE_ENV !== 'production') {\n        const valueType = typeof value;\n        if (valueType !== 'boolean' &&\n            valueType !== 'number' &&\n            valueType !== 'string') {\n            const encodedValue = JSON.stringify(value);\n            throw new TypeError(`üì¶ ui-box: invalid cache value ‚Äú${encodedValue}‚Äù. Only booleans, numbers and strings are supported.`);\n        }\n    }\n    cache.set(selectorHead + property + value, className);\n}\nexports.set = set;\nfunction entries() {\n    return [...cache];\n}\nexports.entries = entries;\nfunction hydrate(newEntries) {\n    cache = new Map([...cache, ...newEntries]);\n}\nexports.hydrate = hydrate;\nfunction clear() {\n    cache.clear();\n}\nexports.clear = clear;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,KAAK,GAAG,IAAIC,GAAG,EAAE;AACrB,SAASC,GAAGA,CAACC,QAAQ,EAAEJ,KAAK,EAAqB;EAAA,IAAnBK,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC3C,OAAOL,KAAK,CAACE,GAAG,CAACE,YAAY,GAAGD,QAAQ,GAAGJ,KAAK,CAAC;AACrD;AACAD,OAAO,CAACI,GAAG,GAAGA,GAAG;AACjB,SAASM,GAAGA,CAACL,QAAQ,EAAEJ,KAAK,EAAEU,SAAS,EAAqB;EAAA,IAAnBL,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACtD,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvC,MAAMC,SAAS,GAAG,OAAOd,KAAK;IAC9B,IAAIc,SAAS,KAAK,SAAS,IACvBA,SAAS,KAAK,QAAQ,IACtBA,SAAS,KAAK,QAAQ,EAAE;MACxB,MAAMC,YAAY,GAAGC,IAAI,CAACC,SAAS,CAACjB,KAAK,CAAC;MAC1C,MAAM,IAAIkB,SAAS,CAAE,mCAAkCH,YAAa,sDAAqD,CAAC;IAC9H;EACJ;EACAd,KAAK,CAACQ,GAAG,CAACJ,YAAY,GAAGD,QAAQ,GAAGJ,KAAK,EAAEU,SAAS,CAAC;AACzD;AACAX,OAAO,CAACU,GAAG,GAAGA,GAAG;AACjB,SAASU,OAAOA,CAAA,EAAG;EACf,OAAO,CAAC,GAAGlB,KAAK,CAAC;AACrB;AACAF,OAAO,CAACoB,OAAO,GAAGA,OAAO;AACzB,SAASC,OAAOA,CAACC,UAAU,EAAE;EACzBpB,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGoB,UAAU,CAAC,CAAC;AAC9C;AACAtB,OAAO,CAACqB,OAAO,GAAGA,OAAO;AACzB,SAASE,KAAKA,CAAA,EAAG;EACbrB,KAAK,CAACqB,KAAK,EAAE;AACjB;AACAvB,OAAO,CAACuB,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}